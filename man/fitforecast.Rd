% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitforecast.R
\name{fitforecast}
\alias{fitforecast}
\title{Fit and forecast for benchmarking purposes}
\usage{
fitforecast(
  y,
  h = NULL,
  pct_train = 0.9,
  pct_calibration = 0.5,
  method = c("thetaf", "arima", "ets", "te", "tbats", "tslm", "dynrmf", "ridge2f",
    "naive", "snaive"),
  level = 95,
  B = 1000L,
  seed = 17223L,
  graph = TRUE,
  conformalize = FALSE,
  type_calibration = c("splitconformal", "cv1", "loocv"),
  gap = 3L,
  agg = c("mean", "median"),
  vol = c("constant", "garch"),
  type_sim = c("kde", "surrogate", "bootstrap"),
  ...
)
}
\arguments{
\item{y}{A univariate time series of class \code{ts}}

\item{h}{Forecasting horizon (default is \code{NULL}, in that case, \code{pct_train}
and \code{pct_calibration} are used)}

\item{pct_train}{Percentage of data in the training set, when \code{h} is \code{NULL}}

\item{pct_calibration}{Percentage of data in the calibration set for conformal prediction}

\item{method}{For now "thetaf" (default), "arima", "ets", "tbats", "tslm", "dynrmf" (from ahead),
"ridge2f" (from ahead), "naive", "snaive"}

\item{level}{Confidence level for prediction intervals in %, default is 95}

\item{B}{Number of bootstrap replications or number of simulations
(yes, 'B' is unfortunate)}

\item{seed}{Reproducibility seed}

\item{graph}{Plot or not?}

\item{conformalize}{Calibrate or not?}

\item{type_calibration}{"splitconformal" (default conformal method), "cv1" (do not use),
"loocv" (do not use)}

\item{gap}{length of training set for loocv conformal (do not use)}

\item{agg}{"mean" or "median" (aggregation method) for}

\item{vol}{"constant" or "garch" (type of volatility modeling for calibrated residuals)}

\item{type_sim}{"kde", "surrogate", "bootstrap" (type of simulation for calibrated residuals)}

\item{...}{additional parameters}
}
\value{
an object of class 'forecast' with additional information
}
\description{
Fit and forecast for benchmarking purposes
}
\examples{

par(mfrow=c(2, 2))
obj1 <- ahead::fitforecast(AirPassengers)
obj2 <- ahead::fitforecast(AirPassengers, conformalize = TRUE)
plot(AirPassengers)
plot(obj1)
obj2$plot()
obj2$plot("simulations")

}
