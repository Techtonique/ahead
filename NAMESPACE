useDynLib(ahead, .registration=TRUE)
S3method(predict, comb_GLMNET)
S3method(predict, comb_OLS)
S3method(predict, comb_Ridge)
S3method(plot, mtsforecast)
S3method(predict, ridge)
S3method(plot, foreccomb_res)
S3method(predict, foreccomb_res)
S3method(print, foreccomb_res_summary)
S3method(summary, foreccomb_res)
importFrom(tseries, surrogate)
importFrom(tseries, tsbootstrap)

importFrom(Rcpp, evalCpp)
importFrom("grDevices", "colorRampPalette")
importFrom("graphics", "abline", "par", "points", "polygon")
importFrom("graphics", "lines")
importFrom("graphics", "matplot")
importFrom("graphics", "matlines")
importFrom("graphics", "barplot")
importFrom("foreach", "foreach")
importFrom("snow", "stopCluster")
importFrom("stats", "is.ts", "runif", "time")
importFrom("stats", "t.test")
importFrom("stats", "as.ts", "complete.cases", "ecdf", "end", "frequency",
           "lag", "median", "predict", "predict.lm", "qnorm", "quantile",
           "residuals", "rnorm", "rt", "sd", "setNames", "start",
           "ts", "tsp", "tsp<-")
importFrom("utils", "tail")
importFrom("utils", "install.packages", "installed.packages")
importFrom("stats", "approx", "coef", "density", "fitted")
import(forecast)
import(ggplot2)
export("armagarchf")
export("basicf")
export("eatf")
export("dynrmf")
export("fitforecast")
export("loessf")
export("loocvridge2f")
export("ridge2f")
export("ridge")
export("varf")
export("createtrendseason")
export("getreturns")
export("getsimulations")
export("removenas")
export("fit_func")
export("predict_func")
export("comb_OLS")
export("comb_Ridge")
export("comb_GLMNET")
export(fitdistr_ahead)
export(quantile_scp)
export(genericforecast)
export(conformalize)
export(mlf)
export(glmthetaf)
export(computeattention)
export(ml_forecast)
export(mlarchf)